# Iron Rain Postgres

# Global Variables, these are common across all deployments.
global:
  name: postgres
  # standalone, cluster or standby
  deploymentMode: cluster

# Demo secrets, don't use these in production.
demo:
  enabled: true

postgres:

  # postgres and postgis
  type: postgres

  replicas: 3

  defaultAdmin:
    username: postgres
    # Use POSTGRES_PASSWORD as key 
    passwordSecret: postgres-demo-secrets
  
  replicationAdmin:
    username: standby
    # Use STANDBY_PASSWORD as key 
    passwordSecret: postgres-demo-secrets    

  labels:
    # application: ml

  annotations:
    # application: ml

  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

  rbac:
    enabled: true

  image:
    repository: ironrainio/postgres
    tag: 13

  postgis:
    image:
      repository: ironrainio/postgis
      tag: 13-3.1

  imagePullPolicy: Always 

  securityContext:
    runAsUser: 999
    fsGroup: 999      

  persistence:
    enabled: true
    storageClass: 
    dbSize: 1Gi
    # Only used if pgbackrest is enabled and set to volume
    backupSize: 1Gi


pgadmin:
  enabled: true

  image:
    repository: dpage/pgadmin4
    tag: 4.29
  
  securityContext:
    runAsUser: 5050
    fsGroup: 5050

  defaultAdmin:
    email: admin@localhost
    # Name of secret with Key PGADMIN_PASSWORD
    passwordSecret: postgres-demo-secrets

  labels:
    # application: ml

  annotations:
    # application: ml

  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 500m
      memory: 1Gi

  ingress:
    enabled: true
    externalHost: pgadmin.local
    
    tls:
      enabled: false
      certManager: false
      secretName: pgadmin-tls

  persistence:
    enabled: true
    storageClass:
    dataSize: 1Gi
    logSize: 1Gi    

# pgbackrest backups, local volume and S3 are enabled.
pgbackrest:
  enabled: true

  # common backup settings
  common:
    retentionFull: 2
    #retentionDiff: 6
  # s3 or volume
  backupType: s3

  labels:
    # application: ml

  annotations:
    # application: ml

  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 250m
      memory: 512Mi

  restore:
    # Restore enabled will restore from the latest available backup
    enabled: true
    # Enabling PITR will restore to a specific point in time
    # Backup info is avaiable in the backup repository under backup.info
    # After a restore the DB will remain read only to allow for any other 
    #  change, run 'select pg_wal_replay_resume();'  as a db admin to make the cluster active
    pitr:
      enabled: true
      # Backup name
      targetBackup: 20210201-081619F_20210201-085318I
      # Can be anytime prior to the backup being taken, wal logs will replay
      # to the latest point before the time
      # Format is 2021-02-01 08:16:08
      targetTime: '2021-02-01 08:53:08'

  s3:
    endpoint: 192.168.0.179
    port: 9000
    bucket: postgres-backups
    # S3 keys
    accessKey: minioadmin
    secretKey: minioadmin
    # Path in bucket
    path: 'cluster'
    # path or uri, path is for minio.local/<BUCKET>, uri is for <BUCKET>.minio.local
    uriStyle: path
    region: minio

  volume:
    path: pg_backups
