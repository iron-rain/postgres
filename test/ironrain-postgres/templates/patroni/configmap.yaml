---
# Source: ironrain-postgres/templates/patroni/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-patroni-config
data:
  entrypoint.sh: |
    #!/bin/bash

    if [[ $UID -ge 10000 ]]; then
        GID=$(id -g)
        sed -e "s/^postgres:x:[^:]*:[^:]*:/postgres:x:$UID:$GID:/" /etc/passwd > /tmp/passwd
        cat /tmp/passwd > /etc/passwd
        rm /tmp/passwd
    fi

    cat > /home/postgres/patroni.yml <<__EOF__
    bootstrap:
      dcs:
        postgresql:
          use_pg_rewind: true          
      initdb:
      - auth-host: md5
      - auth-local: trust
      - encoding: UTF8
      - locale: en_US.UTF-8
      - data-checksums
      pg_hba:
      - host all all 0.0.0.0/0 md5
      - host replication ${PATRONI_REPLICATION_USERNAME} ${PATRONI_KUBERNETES_POD_IP}/16 md5
    restapi:
      connect_address: '${PATRONI_KUBERNETES_POD_IP}:8008'
    postgresql:
      connect_address: '${PATRONI_KUBERNETES_POD_IP}:5432'
      create_replica_methods:
          - pgbackrest
          - basebackup
      pgbackrest:
          command: /usr/bin/pgbackrest --stanza=database --delta restore
          keep_data: True
          no_params: True
      basebackup:
          max-rate: '100M'      
      use_unix_socket: true
      unix_socket_directories: /var/run/postgresql/
      authentication:
        superuser:
          password: '${PATRONI_SUPERUSER_PASSWORD}'
        replication:
          password: '${PATRONI_REPLICATION_PASSWORD}'
      parameters:
          archive_mode: "on"
          archive_command: 'pgbackrest --stanza=database archive-push %p'          
    __EOF__

    unset PATRONI_SUPERUSER_PASSWORD PATRONI_REPLICATION_PASSWORD

    chmod 0700 /var/lib/postgresql/data/pgdata

    exec /usr/bin/python /usr/local/bin/patroni /home/postgres/patroni.yml
